# Generated by Django 4.1.7 on 2023-04-16 14:49

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("AdminSite", "0002_rename_reviewapprovedby_reviewinfo_approved_by_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("full_name", models.CharField(max_length=50)),
                (
                    "phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        max_length=128, region=None
                    ),
                ),
                ("address", models.CharField(max_length=200)),
                ("city", models.CharField(max_length=50)),
                ("province_state", models.CharField(max_length=50)),
                ("country", models.CharField(max_length=50)),
                ("post_code", models.CharField(max_length=10)),
                ("instruction", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="CustomerInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("password", models.CharField(max_length=30)),
                ("first_name", models.CharField(blank=True, max_length=100)),
                ("last_name", models.CharField(blank=True, max_length=100)),
                (
                    "phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True, max_length=128, region=None
                    ),
                ),
                ("ip_address", models.CharField(blank=True, max_length=100, null=True)),
                ("account_is_active", models.BooleanField(default=True)),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("MALE", "Male"),
                            ("FEMALE", "Female"),
                            ("OTHER", "Other"),
                        ],
                        max_length=15,
                    ),
                ),
                ("birth_date", models.DateField(blank=True)),
                ("icon_url", models.CharField(blank=True, max_length=100)),
                ("store_credit", models.IntegerField(default=0)),
                ("level", models.IntegerField(default=0)),
                ("in_blacklist", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="CustomerSavedAddress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "AddressID",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="AdminSite.address",
                    ),
                ),
                (
                    "CustomerID",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="AdminSite.customerinfo",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OrderHasAddress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "AddressID",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="AdminSite.address",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OrderImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image_type", models.CharField(max_length=20)),
                ("name", models.CharField(max_length=20)),
                ("path", models.URLField()),
                ("description", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="OrderInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.EmailField(max_length=254)),
                ("order_number", models.CharField(max_length=20)),
                (
                    "order_status",
                    models.CharField(
                        choices=[
                            ("NULL", "Null"),
                            ("PROCESSING", "Processing"),
                            ("SHIPPED", "Shipped"),
                            ("DELIVERED", "Delivered"),
                            ("COMPLETE", "Complete"),
                            ("CANCELED", "Canceled"),
                            ("REFUND", "Refund"),
                        ],
                        default="PROCESSING",
                        max_length=50,
                    ),
                ),
                ("refound_status", models.CharField(blank=True, max_length=20)),
                (
                    "refound_amount",
                    models.DecimalField(blank=True, decimal_places=2, max_digits=5),
                ),
                (
                    "payment_status",
                    models.CharField(
                        choices=[
                            ("UNPAID", "Unpaid"),
                            ("PAID", "Paid"),
                            ("PROCESSING", "Processing"),
                            ("NULL", "Null"),
                        ],
                        default="UNPAID",
                        max_length=50,
                    ),
                ),
                ("payment_type", models.CharField(max_length=20, null=True)),
                (
                    "order_device",
                    models.CharField(
                        choices=[
                            ("WINDOWS", "Windows"),
                            ("MACOS", "Mac OS"),
                            ("ANDROID", "Android"),
                            ("IOS", "ios"),
                            ("UNKNOWN", "Unknown"),
                        ],
                        default="UNKNOWN",
                        max_length=50,
                    ),
                ),
                (
                    "store_credit_used",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                (
                    "store_credit_gained",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                ("shipping_company", models.CharField(blank=True, max_length=50)),
                ("tracking_number", models.CharField(blank=True, max_length=50)),
                (
                    "shipping_cost",
                    models.DecimalField(blank=True, decimal_places=2, max_digits=5),
                ),
                (
                    "discount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                (
                    "accessory_total",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                ("sub_total", models.DecimalField(decimal_places=2, max_digits=6)),
                ("total_amount", models.DecimalField(decimal_places=2, max_digits=6)),
                ("comment", models.TextField()),
                ("issue_order", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="OrderLineItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.IntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(99),
                        ],
                    ),
                ),
                (
                    "OrderID",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="AdminSite.orderinfo",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OrderTax",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tax_number", models.CharField(max_length=100)),
                ("total_amount", models.DecimalField(decimal_places=2, max_digits=5)),
                ("gst", models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ("hst", models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ("qst", models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ("pst", models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "OrderID",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="AdminSite.orderinfo",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProductDimension",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("frame_width", models.IntegerField()),
                ("lens_width", models.IntegerField()),
                ("bridge", models.IntegerField()),
                ("temple_length", models.IntegerField()),
                ("lens_height", models.IntegerField()),
                ("upper_wearable_width", models.IntegerField()),
                ("lower_wearable_width", models.IntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image_type", models.CharField(max_length=50)),
                ("name", models.CharField(max_length=20)),
                ("path", models.URLField()),
                ("description", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="ProductInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("model_number", models.CharField(max_length=20)),
                ("sku", models.CharField(max_length=20, unique=True)),
                (
                    "stock",
                    models.IntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=5)),
                ("description", models.TextField(null=True)),
                (
                    "letter_size",
                    models.CharField(
                        choices=[
                            ("XS", "xs"),
                            ("S", "s"),
                            ("M", "m"),
                            ("L", "l"),
                            ("XL", "xl"),
                        ],
                        max_length=10,
                    ),
                ),
                ("string_size", models.CharField(max_length=10)),
                (
                    "frame_weight",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(999),
                        ]
                    ),
                ),
                ("bifocal", models.BooleanField(default=False)),
                (
                    "material",
                    models.CharField(
                        choices=[
                            ("ACETATE", "Acetate"),
                            ("TITANIUM", "Titanium"),
                            ("PLASTIC", "Plastic"),
                            ("CARBONFIBER", "Carbon Fiber"),
                            ("MIXED", "Mixed"),
                            ("METAL", "Metal"),
                            ("ALUMINIUMALLOY", "Aluminium Alloy"),
                            ("WOOD", "Wood"),
                            ("TR90", "tr90"),
                            ("ULTEM", "Ultem"),
                            ("MEMORYTITANIUM", "Memory Titanium"),
                            ("STAINLESSSTEEL", "Stainless Steel"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "shape",
                    models.CharField(
                        choices=[
                            ("RECTANGLE", "Rectangle"),
                            ("ROUND", "Round"),
                            ("SQUARE", "Square"),
                            ("OVAL", "Oval"),
                            ("CATEYE", "Cat-Eye"),
                            ("AVIATOR", "Aviator"),
                            ("HORN", "Horn"),
                            ("BROWLINE", "Browline"),
                            ("GEOMETRIC", "Geometric"),
                            ("HEART", "Heart"),
                            ("BUTTERFLY", "Butterfly"),
                            ("IRREGULAR", "Irregular"),
                            ("OTHER", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("MALE", "Male"),
                            ("FEMALE", "Female"),
                            ("UNISEX", "Unisex"),
                        ],
                        default="UNISEX",
                        max_length=20,
                    ),
                ),
                (
                    "nose_pad",
                    models.CharField(
                        choices=[
                            ("STANDARD", "Standard"),
                            ("ASIANFIT", "Asian Fit"),
                            ("ADJUSTABLE", "Adjustable"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "frame_style",
                    models.CharField(
                        choices=[
                            ("FULLRIM", "Full-Rim"),
                            ("SEMIRIMLESS", "Semi-Rimless"),
                            ("RIMLESS", "Rimless"),
                        ],
                        max_length=20,
                    ),
                ),
                ("pd_upper_range", models.IntegerField(default=80)),
                ("pd_lower_range", models.IntegerField(default=30)),
                ("color_name", models.CharField(max_length=50)),
                ("online", models.BooleanField(default=False)),
                (
                    "reduced_price",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="ProductReview",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=50)),
                ("content", models.TextField(blank=True)),
                ("user_email", models.EmailField(max_length=254)),
                ("online", models.BooleanField(default=False)),
                (
                    "rating",
                    models.IntegerField(
                        default=5,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "ProductID",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="AdminSite.productinfo",
                    ),
                ),
                (
                    "approved_by",
                    models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ShoppingList",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.IntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(99),
                        ],
                    ),
                ),
                (
                    "list_type",
                    models.CharField(
                        choices=[
                            ("SHOPPINGCART", "Shopping Cart"),
                            ("WISHLIST", "Wish List"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="AdminSite.customerinfo",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="AdminSite.productinfo",
                    ),
                ),
            ],
        ),
        migrations.DeleteModel(name="ReviewInfo",),
        migrations.AddField(
            model_name="productimage",
            name="productID",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="AdminSite.productinfo"
            ),
        ),
        migrations.AddField(
            model_name="productdimension",
            name="productID",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="product_dimension",
                to="AdminSite.productinfo",
            ),
        ),
        migrations.AddField(
            model_name="orderlineitem",
            name="ProductID",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="AdminSite.productinfo"
            ),
        ),
        migrations.AddField(
            model_name="orderinfo",
            name="product",
            field=models.ManyToManyField(
                through="AdminSite.OrderLineItem", to="AdminSite.productinfo"
            ),
        ),
        migrations.AddField(
            model_name="orderimage",
            name="OrderID",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="AdminSite.orderinfo"
            ),
        ),
        migrations.AddField(
            model_name="orderhasaddress",
            name="OrderID",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="AdminSite.orderinfo"
            ),
        ),
        migrations.AddField(
            model_name="customerinfo",
            name="wish_list",
            field=models.ManyToManyField(
                through="AdminSite.ShoppingList", to="AdminSite.productinfo"
            ),
        ),
    ]
