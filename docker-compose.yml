version: "3.9"

services:
  eyeloveware:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - .:/eyeloveware_backend_api
      - static_volume:/eyeloveware_backend_api/staticfiles
      - media_volume:/eyeloveware_backend_api/media
    command: >
      sh -c "python manage.py migrate &&
             gunicorn Leoptique.wsgi:application --config gunicorn.conf.py"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
    depends_on:
      - db

  db:
    image: postgres:13-alpine
    volumes:
      - elw-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  usersite:
    build:
      context: ../../frontend/
      dockerfile: Dockerfile
    ports:
      - "5174:80"
    volumes:
      - elw-usersite-volume:/usr/share/nginx/html

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/nginx/nginx.conf:/etc/nginx/nginx.conf
      - /etc/nginx/sites-enabled/elw_website_config.conf:/etc/nginx/sites-enabled/elw_website_config.conf
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
      - elw-usersite-volume:/usr/share/nginx/html
      - static_volume:/eyeloveware_backend_api/staticfiles
      - media_volume:/eyeloveware_backend_api/media
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"    
    depends_on:
      - eyeloveware
      - usersite

  certbot:
    image: certbot/certbot
    # command: certonly --webroot --webroot-path=/var/www/certbot --email evanabyss@gmail.com --agree-tos --no-eff-email -d www.eyelovewear.com -d admin.eyelovewear.com
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
      # - ./nginx/reload-nginx.sh:/etc/letsencrypt/renewal-hooks/deploy/reload-nginx.sh
    # entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --webroot --webroot-path=/var/www/certbot -n --quiet --deploy-hook /etc/letsencrypt/renewal-hooks/deploy/reload-nginx.sh; sleep 12h & wait $${!}; done;'"
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    # entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --quiet --deploy-hook \"nginx -s reload\"; sleep 12h & wait $${!}; done;'"
    depends_on:
      - nginx

volumes:
  elw-usersite-volume:
  elw-db-data:
  static_volume:
  media_volume:
