# Generated by Django 4.1.7 on 2023-04-16 18:45

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ProductInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("model_number", models.CharField(max_length=20)),
                ("sku", models.CharField(max_length=20, unique=True)),
                (
                    "stock",
                    models.IntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=5)),
                ("description", models.TextField(null=True)),
                (
                    "letter_size",
                    models.CharField(
                        choices=[
                            ("XS", "xs"),
                            ("S", "s"),
                            ("M", "m"),
                            ("L", "l"),
                            ("XL", "xl"),
                        ],
                        max_length=10,
                    ),
                ),
                ("string_size", models.CharField(max_length=10)),
                (
                    "frame_weight",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(999),
                        ]
                    ),
                ),
                ("bifocal", models.BooleanField(default=False)),
                (
                    "material",
                    models.CharField(
                        choices=[
                            ("ACETATE", "Acetate"),
                            ("TITANIUM", "Titanium"),
                            ("PLASTIC", "Plastic"),
                            ("CARBONFIBER", "Carbon Fiber"),
                            ("MIXED", "Mixed"),
                            ("METAL", "Metal"),
                            ("ALUMINIUMALLOY", "Aluminium Alloy"),
                            ("WOOD", "Wood"),
                            ("TR90", "tr90"),
                            ("ULTEM", "Ultem"),
                            ("MEMORYTITANIUM", "Memory Titanium"),
                            ("STAINLESSSTEEL", "Stainless Steel"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "shape",
                    models.CharField(
                        choices=[
                            ("RECTANGLE", "Rectangle"),
                            ("ROUND", "Round"),
                            ("SQUARE", "Square"),
                            ("OVAL", "Oval"),
                            ("CATEYE", "Cat-Eye"),
                            ("AVIATOR", "Aviator"),
                            ("HORN", "Horn"),
                            ("BROWLINE", "Browline"),
                            ("GEOMETRIC", "Geometric"),
                            ("HEART", "Heart"),
                            ("BUTTERFLY", "Butterfly"),
                            ("IRREGULAR", "Irregular"),
                            ("OTHER", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("MALE", "Male"),
                            ("FEMALE", "Female"),
                            ("UNISEX", "Unisex"),
                        ],
                        default="UNISEX",
                        max_length=20,
                    ),
                ),
                (
                    "nose_pad",
                    models.CharField(
                        choices=[
                            ("STANDARD", "Standard"),
                            ("ASIANFIT", "Asian Fit"),
                            ("ADJUSTABLE", "Adjustable"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "frame_style",
                    models.CharField(
                        choices=[
                            ("FULLRIM", "Full-Rim"),
                            ("SEMIRIMLESS", "Semi-Rimless"),
                            ("RIMLESS", "Rimless"),
                        ],
                        max_length=20,
                    ),
                ),
                ("pd_upper_range", models.IntegerField(default=80)),
                ("pd_lower_range", models.IntegerField(default=30)),
                ("color_name", models.CharField(max_length=50)),
                ("online", models.BooleanField(default=False)),
                (
                    "reduced_price",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Product",
                "verbose_name_plural": "Products",
                "db_table": "ProductInfo",
            },
        ),
        migrations.CreateModel(
            name="ProductTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=20)),
                ("description", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("product", models.ManyToManyField(to="Product.productinfo")),
            ],
            options={
                "verbose_name": "Product Tag",
                "verbose_name_plural": "Product Tags",
                "db_table": "ProductTag",
            },
        ),
        migrations.CreateModel(
            name="ProductReview",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=50)),
                ("content", models.TextField(blank=True)),
                ("user_email", models.EmailField(max_length=254)),
                ("online", models.BooleanField(default=False)),
                (
                    "rating",
                    models.IntegerField(
                        default=5,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "ProductID",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Product.productinfo",
                    ),
                ),
                (
                    "approved_by",
                    models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL),
                ),
            ],
            options={
                "verbose_name": "Product Review",
                "verbose_name_plural": "Product Reviews",
                "db_table": "ProductReview",
            },
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image_type", models.CharField(max_length=50)),
                ("name", models.CharField(max_length=20)),
                ("path", models.URLField()),
                ("description", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "productID",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Product.productinfo",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product Image",
                "verbose_name_plural": "Product Images",
                "db_table": "ProductImage",
            },
        ),
        migrations.CreateModel(
            name="ProductFeature",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=20)),
                ("description", models.TextField()),
                ("image", models.URLField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("product", models.ManyToManyField(to="Product.productinfo")),
            ],
            options={
                "verbose_name": "Product Feature",
                "verbose_name_plural": "Product Features",
                "db_table": "ProductFeature",
            },
        ),
        migrations.CreateModel(
            name="ProductDimension",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("frame_width", models.IntegerField()),
                ("lens_width", models.IntegerField()),
                ("bridge", models.IntegerField()),
                ("temple_length", models.IntegerField()),
                ("lens_height", models.IntegerField()),
                ("upper_wearable_width", models.IntegerField()),
                ("lower_wearable_width", models.IntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "productID",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_dimension",
                        to="Product.productinfo",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product Dimension",
                "verbose_name_plural": "Product Dimensions",
                "db_table": "ProductDimension",
            },
        ),
    ]
